services:
  db:
    image: postgres:14-alpine
    container_name: db
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=postgres
      - POSTGRES_DB=asi-ii
    volumes:
      - local_pgdata:/var/lib/postgresql/data
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@asi-ii.com
      PGADMIN_DEFAULT_PASSWORD: asi2
    volumes:
      - pgadmin-data:/var/lib/pgadmin
  spring-back:
    depends_on:
      - db
    build: ./asi-ii
    container_name: asi-ii-backend
    ports:
      - "8081:8081"
      - "5005:5005"
  express-socket:
    container_name: express-socket
    restart: always
    build:
      context: ./express-socket
      dockerfile: Dockerfile
    volumes:
      - ./express-socket:/app
    ports:
      - "3000:3000"
  react-frontend:
    container_name: react-frontend
    restart: no
    build:
      context: ./react-frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./react-frontend:/app
      - /app/node_modules
    depends_on:
      - spring-back
    environment:
      - CHOKIDAR_USEPOLLING=true  # Ensures file changes are detected
      - WATCHPACK_POLLING=true
  activemq:
    image: symptoma/activemq:5.18.3
    container_name: activemq
    ports:
      - "61616:61616"
      - "61613:61613"
      - "8161:8161"
    environment:
      ACTIVEMQ_DISALLOW_WEBCONSOLE: "false"
      ACTIVEMQ_USERNAME: "admin"
      ACTIVEMQ_PASSWORD: "asi2"
      ACTIVEMQ_WEBADMIN_USERNAME: "admin"
      ACTIVEMQ_WEBADMIN_PASSWORD: "asi2"
  mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    command:
      - --storageEngine
      - wiredTiger
      - --auth
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: asi-ii-mdb
    volumes:
      - mongodb-data:/var/lib/mongodb-data

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8091:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_SERVER: mongodb

  spring-card-prompt:
    depends_on:
      - activemq
      - ollama
    build: ./card-prompt
    container_name: card-prompt
    ports:
      - "8082:8082"
      - "5006:5006"
  spring-card-image:
    depends_on:
        - activemq
    build: ./card-image
    container_name: card-image
    ports:
      - "8083:8083"
      - "5007:5007"
  spring-orchestrator:
    depends_on:
      - activemq
      - mongo-orch
    build: ./orchestrator
    container_name: orchestrator
    ports:
      - "8088:8088"
      - "5008:5008"
  mongo-orch:
    image: mongo:6
    container_name: mongo-orch
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: root
    volumes:
      - mongo_data:/data/db
  ollama:
    container_name: ollama-local
    image: ollama/ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    deploy:
      resources:
        limits:
          memory: 4g
          cpus: "2.0"
  
volumes:
  local_pgdata:
  pgadmin-data:
  mongo_data:
  mongodb-data:
  ollama:
